global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
	bind *:81
	reqadd X-Forwarded-Proto:\ http

	acl host_web hdr_beg(host) -i www
	acl host_nas hdr_beg(host) -i nas
	acl host_git hdr_beg(host) -i git
	acl host_m hdr_beg(host) -i m
	acl host_jenkins hdr_beg(host) -i jenkins
	#acl path_web path_beg /myshared
	#acl host_pub hdr_beg(host) -i pub
	acl host_blog hdr_beg(host) -i blog
	#acl host_iptime hdr_beg(host) -i gumabae
	acl host_api hdr_beg(host) -i api

	#use_backend my_nas_web if host_web
	#use_backend my_web if host_web
	#use_backend my_nas_web if host_iptime
	redirect prefix https://nas.yurisoft.com code 301 if host_nas
	
	use_backend my_nas if host_nas
	use_backend my_jenkins if host_jenkins
	use_backend my_git_http if host_git
	use_backend my_blog if host_blog 
	use_backend my_api if host_m
	use_backend wso2am if host_api
	#use_backend iptime id host_pub
	acl host_none hdr(host) -i yurisoft.com
	redirect prefix http://www.yurisoft.com code 301 if host_none

#frontend https-in
#	option ssl-hello-chk
#	bind *:9443 ssl crt /etc/letsencrypt/live/m.yurisoft.com/fullchain2.pem
#	reqadd X-Forwarded-Proto:\ https

#	acl hots_api_admin hdr_beg(host) -i api
	
#	use_backend wso2am_admin if host_api_admin

frontend https-in
	option ssl-hello-chk
	bind *:82 ssl crt /etc/letsencrypt/live/m.yurisoft.com/fullchain2.pem
	#bind *:82 ssl crt /etc/ssl/certs/archive/yurisoft.pem
	#bind *:443
	reqadd X-Forwarded-Proto:\ https
	
	acl host_web hdr_beg(host) -i www
	acl host_nas hdr_beg(host) -i nas
	acl host_git hdr_beg(host) -i git
	acl host_m hdr_beg(host) -i m
	#acl path_web path_beg /photo /*/photo /myshared
	#acl host_pub hdr_beg(host) -i pub
	acl host_blog hdr_beg(host) -i blog
	acl host_iptime hdr_beg(host) -i gumabae
	acl host_api hdr_beg(host) -i api
	acl host_api_admin hdr_beg(host) -i apim
	#acl path_map path_beg /map /testm /test /css/style.css /bundle.js /images /api	

	use_backend my_nas_web if host_iptime
	#use_backend my_amzn_web if host_web path_map
	use_backend my_nas_web if host_web
	use_backend my_nas_web if host_nas
	use_backend my_git_http if host_git
	use_backend my_nas if host_nas
#	use_backend my_webdav if host_m
	use_backend my_blog if host_blog 
	use_backend my_api if host_m
	use_backend wso2am_admin if host_api_admin
	use_backend wso2am_ssl if host_api
	#use_backend iptime if host_pub

frontend sshd
	bind *:10022
	mode tcp	

	#acl host_git hdr_beg(host) -i git
	#use_backend my_git_ssh if host_git
	default_backend my_git_ssh

backend my_nas
	option http-server-close
	server mynas 192.168.0.26:5000 weight 1

backend my_nas_web
	option http-server-close
	server mynasweb 192.168.0.26:80 weight 1
	#option forwardfor
	#server amznweb 52.196.142.30:80 weight 1

backend my_amzn_web
	option http-server-close
	server amznweb 52.196.142.30:80 weight 1

backend my_nas_web_ssl
	option http-server-close
	server mynaswebssl 192.168.0.26:443 weight 1

backend my_mail
	option http-server-close
	server mymail 192.168.0.26:21680 weight 1

backend my_web
	option http-server-close
	server myweb 127.0.0.1:1111 weight 1

backend my_webdav
	option http-server-close
	server mywebdav 192.168.0.26:5005 weight 1

backend my_git_http
	option http-server-close
	server mygithttp 192.168.0.26:30000 weight 1

backend my_git_ssh
	mode tcp
	server mygitssh 192.168.0.26:30002 weight 1

backend my_jenkins
	option http-server-close
	server myjenkins 192.168.0.26:32778 weight 1

backend my_blog
	option http-server-close
	server myblog 192.168.0.26:30020 weight 1

backend my_api
	option http-server-close
	#server myapi 192.168.0.26:8080 weight 1
	#server myapi 192.168.0.24:5000 weight 1
	#server myapi 130.211.120.102:80 weight 1
	server myapi 192.168.0.26:32769 weight 1

backend iptime
	option http-server-close
	server iptime 192.168.0.200:80 weight 1

backend wso2am_admin
	option http-server-close
	server wso2am-imac 192.168.0.26:9443 check ssl verify none

backend wso2am_ssl
	option http-server-close
	server wso2am-imac 192.168.0.26:8243 check ssl verify none

backend wso2am
	option http-server-close
	server wso2am-imac 192.168.0.26:8280

